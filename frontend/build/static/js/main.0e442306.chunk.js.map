{"version":3,"sources":["components/Header.js","components/Navigation.js","components/Layout.js","components/PostSummary.js","config.js","pages/Home.js","pages/Archive.js","pages/Create.js","pages/Post.js","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","props","logoStyle","width","marginRight","logoSize","style","display","flexWrap","height","title","Navigation","className","location","useLocation","as","Link","active","pathname","to","gridStyle","css","headerStyle","sideNavStyle","mainStyle","Layout","cardStyle","badgeColors","getBadgeColor","tag","tagId","split","map","char","charCodeAt","reduce","s","a","PostSummary","author","Date","date","toLocaleDateString","_id","tags","Fragment","variant","baseUrl","App","useState","posts","setPosts","useEffect","loadPosts","fetch","then","resp","json","results","post","key","formStyle","setAuthor","setTitle","setTags","body","setBody","toastOpen","setToastOpen","handleSubmit","method","headers","JSON","stringify","setTimeout","label","description","onChange","e","target","value","rows","primaryButton","text","onClick","open","close","params","useParams","setPost","showModal","setShowModal","navigate","useNavigate","deletePost","id","handleNewComment","result","loadPost","dangerouslySetInnerHTML","__html","leftGlyph","glyph","comments","comment","weight","buttonText","onConfirm","onCancel","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","fontsURL","globalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e442306.chunk.js","sourcesContent":["import { H1 } from '@leafygreen-ui/typography';\nimport { MongoDBLogoMark } from '@leafygreen-ui/logo';\n\nexport default function Header(props) {\n  let wrapperStyle = {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  }\n  \n  let logoSize = 48;\n\n  let logoStyle = { \n    width: `${logoSize}px`, \n    marginRight: `${logoSize/2}px`\n  };\n  \n  return(\n    <div style={wrapperStyle}>\n      <MongoDBLogoMark style={logoStyle} height={logoSize} />\n      <H1>{props.title}</H1>\n    </div>\n  )\n}","import { SideNav, SideNavItem } from '@leafygreen-ui/side-nav';\nimport { Link, useLocation } from \"react-router-dom\";\n\nexport default function Navigation ({ className }) {\n  const location = useLocation();\n\n  return (\n    <SideNav aria-label=\"Navigation Bar\" className={className}>\n      <SideNavItem aria-label=\"Home\" as={Link} active={location.pathname === \"/\"} to=\"/\">Home</SideNavItem>\n      <SideNavItem aria-label=\"Archive\" as={Link} active={location.pathname === \"/archive\"} to=\"/archive\">Archive</SideNavItem>\n      <SideNavItem aria-label=\"New Post\" as={Link} active={location.pathname === \"/create\"} to=\"/create\">New Post</SideNavItem>\n    </SideNav>\n  );\n}","import Header from \"./Header\";\nimport Navigation from \"./Navigation\";\nimport { css } from \"@leafygreen-ui/emotion\";\nimport { Outlet } from \"react-router-dom\";\n\nconst gridStyle = css`\n  display: grid;\n  grid-template:\n    [header-start] \"header header\" 107px [header-end body-start]\n    \"side-nav body\" auto [body-end] / auto 1fr;\n  width: 100vw;\n  max-width: 100%;\n  height: 100vh;\n  min-width: 767px;\n  margin: 0px;\n`;\n\nconst headerStyle = css`\n  grid-area: header;\n  display: flex;\n  align-items: center;\n  gap: 16px;\n  padding: 24px;\n  box-shadow: 0px 2px 4px 0px rgba(0, 0, 0, 0.2);\n  z-index: 1;\n`;\n\nconst sideNavStyle = css`\n  grid-area: side-nav;\n`;\n\nconst mainStyle = css`\n  grid-area: body;\n  padding: 12px;\n`;\n\nexport default function Layout(props) {\n  return(\n    <div className={gridStyle}>\n      <section className={headerStyle}>\n        <Header title=\"Musicsheets\"/>\n      </section>\n      <Navigation className={sideNavStyle} />\n\n      <section className={mainStyle}>\n        <Outlet />\n      </section>\n    </div>\n  )\n}","import React from \"react\";\nimport Card from \"@leafygreen-ui/card\";\nimport { css } from \"@leafygreen-ui/emotion\";\nimport { H3 } from \"@leafygreen-ui/typography\";\nimport Badge from \"@leafygreen-ui/badge\";\nimport { Link } from \"react-router-dom\";\n\nconst cardStyle = css`\n  margin: 1em;\n`\nconst badgeColors = [\"lightgray\", \"darkgray\", \"red\", \"blue\", \"green\", \"yellow\"];\nconst getBadgeColor = tag => {\n  let tagId = tag.split(\"\").map(char => char.charCodeAt(0)).reduce((s,a) => s + a, 0) % 6;\n  return badgeColors[tagId];\n}\n\nexport default function PostSummary(props) {\n  return (\n    <Card className={cardStyle}>\n      <H3>{props.title}</H3>\n      by {props.author} on {(new Date(props.date)).toLocaleDateString()}<br/>\n      <Link to={`/post/${props._id}`}>Read More...</Link><br/>\n      {props && props.tags && props.tags.map(tag => (<React.Fragment><Badge variant={getBadgeColor(tag)}>{tag}</Badge> </React.Fragment>))}\n    </Card>\n  )\n}","export const baseUrl = 'http://127.0.0.1:5050';","import React, {useState, useEffect} from \"react\";\nimport { H2 } from \"@leafygreen-ui/typography\";\nimport PostSummary from \"../components/PostSummary\";\nimport { baseUrl } from \"../config\";\n\nexport default function App() {\n  let [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    const loadPosts = async () => {\n      let results = await fetch(`${baseUrl}/posts`).then(resp => resp.json());\n      setPosts(results);\n    }\n\n    loadPosts();\n  }, []);\n\n  return (\n    <React.Fragment>\n      <H2>Latest Articles</H2>\n      <div>\n        {posts.map(post => {\n          return(\n            <PostSummary {...post} key={post._id} />\n          )\n        })}\n      </div>\n    </React.Fragment>\n  )\n}","import React, {useState, useEffect} from \"react\";\nimport { H2 } from \"@leafygreen-ui/typography\";\nimport PostSummary from \"../components/PostSummary\";\nimport { baseUrl } from \"../config\";\n\nexport default function App() {\n\n  let [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    const loadPosts = async () => {\n      let results = await fetch(`${baseUrl}/posts/`).then(resp => resp.json());\n      setPosts(results);\n    }\n\n    loadPosts();\n  }, []);\n\n  return (\n    <React.Fragment>\n      <H2>All Articles</H2>\n      <div>\n        {posts.map(post => {\n          return(\n            <PostSummary {...post} key={post._id} />\n          )\n        })}\n      </div>\n    </React.Fragment>\n  )\n}","import React, {useState} from \"react\";\nimport { H2 } from \"@leafygreen-ui/typography\";\nimport TextInput from '@leafygreen-ui/text-input';\nimport TextArea from \"@leafygreen-ui/text-area\";\nimport FormFooter from \"@leafygreen-ui/form-footer\";\nimport Toast from \"@leafygreen-ui/toast\";\nimport { css } from \"@leafygreen-ui/emotion\";\nimport { baseUrl } from \"../config\";\n\nconst formStyle = css`\n  height: 100vh;\n  min-width: 767px;\n  margin: 10px;\n\n  input {\n    margin-bottom: 20px;\n  }\n`\n\nexport default function App() {\n  let [ author, setAuthor ] = useState(\"\");\n  let [ title, setTitle ] = useState(\"\");\n  let [ tags, setTags ] = useState(\"\");\n  let [ body, setBody ] = useState(\"\");\n  let [toastOpen, setToastOpen] = useState(false);\n\n  const handleSubmit = async () => {\n    await fetch(`${baseUrl}/posts`, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        author, title, tags: tags.split(\",\"), body\n      })\n    }).then(resp => resp.json());\n    setAuthor(\"\");\n    setTitle(\"\");\n    setTags(\"\");\n    setBody(\"\");\n    setToastOpen(true);\n    setTimeout(() => setToastOpen(false), 3000);\n  }\n\n  return (\n    <React.Fragment>\n      <H2>Write New Post</H2>\n      <form className={formStyle}>\n        <TextInput\n          label=\"Author\"\n          description=\"Enter your name\"\n          onChange={e => setAuthor(e.target.value)}\n          value={author}\n        />\n        <TextInput\n          label=\"Title\"\n          description=\"Enter the title for this blog post\"\n          onChange={e => setTitle(e.target.value)}\n          value={title}\n        />\n        <TextInput\n          label=\"Tags\"\n          description=\"Enter tags for the post, comma separated if multiple\"\n          onChange={e => setTags(e.target.value)}\n          value={tags}\n        />\n        <TextArea\n          label=\"Post body\"\n          description=\"Write your article. Be creative and have fun!\"\n          onChange={e => setBody(e.target.value)}\n          rows=\"10\"\n          value={body}\n        />\n        <FormFooter\n          primaryButton={{\n            text: 'Save Blog Post',\n            onClick: handleSubmit\n          }}\n        />\n      </form>\n\n      <Toast\n        variant=\"success\"\n        title=\"Post Created\"\n        body=\"Your blog post was successfully created.\"\n        open={toastOpen}\n        close={() => setToastOpen(false)}\n      />\n    </React.Fragment>\n  )\n}","import React, {useState, useEffect} from \"react\";\nimport ExpandableCard from \"@leafygreen-ui/expandable-card\";\nimport { H2, H3, Body } from \"@leafygreen-ui/typography\";\nimport ConfirmationModal from \"@leafygreen-ui/confirmation-modal\";\nimport TextInput from '@leafygreen-ui/text-input';\nimport TextArea from \"@leafygreen-ui/text-area\";\nimport Icon from \"@leafygreen-ui/icon\";\nimport Button from \"@leafygreen-ui/button\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { baseUrl } from \"../config\";\n\nexport default function App() {\n  let params = useParams();\n  let [post, setPost] = useState({});\n  let [showModal, setShowModal] = useState(false);\n  let [author, setAuthor] = useState(\"\");\n  let [body, setBody] = useState(\"\");\n  const navigate = useNavigate();\n\n  const deletePost = async () => {\n    await fetch(`${baseUrl}/posts/${params.id}`, {\n      method: \"DELETE\"\n    });\n    return navigate(\"/\");\n  }\n\n  const handleNewComment = async () => {\n    await fetch(`${baseUrl}/posts/comment/${params.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        author, body\n      })\n    });\n\n    let result = await fetch(`${baseUrl}/posts/${params.id}`).then(resp => resp.json());\n    setPost(result);\n\n    setAuthor(\"\");\n    setBody(\"\");\n    setShowModal(false);\n  }\n\n  useEffect(() => {\n    const loadPost = async () => {\n      let results = await fetch(`${baseUrl}/posts/${params.id}`).then(resp => resp.json());\n      setPost(results);\n    }\n\n    loadPost();\n  }, []);\n\n  return (\n    <React.Fragment>\n      <H2>{post.title}</H2>\n      <H3>by {post.author}</H3>\n      <p>Published on {(new Date(post.date)).toLocaleDateString()}</p>\n      <p dangerouslySetInnerHTML={{__html: post.body}} />\n      <Button variant=\"primary\" leftGlyph={<Icon glyph=\"Megaphone\" />} onClick={() => setShowModal(true)}>Add Comment</Button>&nbsp;&nbsp;\n      <Button variant=\"danger\" leftGlyph={<Icon glyph=\"Trash\" />} onClick={deletePost}>Delete Post</Button>\n      <br/><br/>\n      {post && post.comments &&\n      <ExpandableCard title=\"Comments\">\n        {post.comments.map(comment => {\n          return (\n            <p>\n              <Body weight=\"medium\">{comment.author} said: </Body>\n              <Body>{comment.body}</Body>\n            </p>\n          )\n        })}\n      </ExpandableCard>\n      }\n\n      <ConfirmationModal\n        open={showModal}\n        buttonText=\"Save Comment\"\n        onConfirm={handleNewComment}\n        onCancel={() => setShowModal(false)}\n      >\n        <H2>Add Comment</H2>\n        <TextInput\n            label=\"Name\"\n            description=\"Enter your name\"\n            onChange={e => setAuthor(e.target.value)}\n            value={author}\n          />\n          <TextArea\n            label=\"Comment\"\n            onChange={e => setBody(e.target.value)}\n            rows=\"5\"\n            value={body}\n          />\n      </ConfirmationModal>\n    </React.Fragment>\n  )\n}","import \"./styles.css\";\nimport \"./fonts.css\";\n\nimport LeafygreenProvider from '@leafygreen-ui/leafygreen-provider';\nimport Layout from \"./components/Layout\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n\nimport Home from \"./pages/Home\";\nimport Archive from \"./pages/Archive\";\nimport Create from \"./pages/Create\";\nimport Post from \"./pages/Post\";\n\n\nfunction App() {\n  return (\n    <LeafygreenProvider>\n      <Router>\n        <Routes>\n          <Route path=\"/\" element={<Layout />}>\n            <Route path=\"/\" element={<Home />} />\n            <Route path=\"/archive\" element={<Archive />} />\n            <Route path=\"/create\" element={<Create />} />\n            <Route path=\"/post/:id\" element={<Post />} />\n          </Route>\n        </Routes>\n      </Router>\n    </LeafygreenProvider>\n  );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { css } from '@leafygreen-ui/emotion';\n\nconst CDN = 'https://d2va9gm4j17fy9.cloudfront.net';\nconst fontsURL = `${CDN}/fonts`;\n\nexport const globalStyles = css`\n  /**\n   * Euclid\n   */\n\n  /* Semibold */\n  @font-face {\n    font-family: 'Euclid Circular A';\n    src: url('${fontsURL}euclid-circular/EuclidCircularA-Semibold-WebXL.woff')\n        format('woff'),\n      url('${fontsURL}euclid-circular/EuclidCircularA-Semibold-WebXL.woff2')\n        format('woff2'),\n      url('${fontsURL}euclid-circular/EuclidCircularA-Semibold.ttf')\n        format('truetype');\n    font-weight: 700;\n    font-style: normal;\n  }\n\n  /* Semibold Italic */\n  @font-face {\n    font-family: 'Euclid Circular A';\n    src: url('${fontsURL}euclid-circular/EuclidCircularA-SemiboldItalic-WebXL.woff')\n        format('woff'),\n      url('${fontsURL}euclid-circular/EuclidCircularA-SemiboldItalic-WebXL.woff2')\n        format('woff2'),\n      url('${fontsURL}euclid-circular/EuclidCircularA-SemiboldItalic.ttf')\n        format('truetype');\n    font-weight: 700;\n    font-style: italic;\n  }\n\n  /* Medium */\n  @font-face {\n    font-family: 'Euclid Circular A';\n    src: url('${fontsURL}euclid-circular/EuclidCircularA-Medium-WebXL.woff')\n        format('woff'),\n      url('${fontsURL}euclid-circular/EuclidCircularA-Medium-WebXL.woff2')\n        format('woff2'),\n      url('${fontsURL}euclid-circular/EuclidCircularA-Medium.ttf')\n        format('truetype');\n    font-weight: 500;\n    font-style: normal;\n  }\n\n  /* Medium Italic */\n  @font-face {\n    font-family: 'Euclid Circular A';\n    src: url('${fontsURL}euclid-circular/EuclidCircularA-MediumItalic-WebXL.woff')\n        format('woff'),\n      url('${fontsURL}euclid-circular/EuclidCircularA-MediumItalic-WebXL.woff2')\n        format('woff2'),\n      url('${fontsURL}euclid-circular/EuclidCircularA-MediumItalic.ttf')\n        format('truetype');\n    font-weight: 500;\n    font-style: italic;\n  }\n\n  /* Normal */\n  @font-face {\n    font-family: 'Euclid Circular A';\n    src: url('${fontsURL}euclid-circular/EuclidCircularA-Regular-WebXL.woff')\n        format('woff'),\n      url('${fontsURL}euclid-circular/EuclidCircularA-Regular-WebXL.woff2')\n        format('woff2'),\n      url('${fontsURL}euclid-circular/EuclidCircularA-Regular.ttf')\n        format('truetype');\n    font-weight: 400;\n    font-style: normal;\n  }\n\n  /* Italic */\n  @font-face {\n    font-family: 'Euclid Circular A';\n    src: url('${fontsURL}euclid-circular/EuclidCircularA-RegularItalic-WebXL.woff')\n        format('woff'),\n      url('${fontsURL}euclid-circular/EuclidCircularA-RegularItalic-WebXL.woff2')\n        format('woff2'),\n      url('${fontsURL}euclid-circular/EuclidCircularA-RegularItalic.ttf')\n        format('truetype');\n    font-weight: 400;\n    font-style: italic;\n  }\n\n  /**\n   * Value Serif\n   */\n\n  /* Bold */\n  @font-face {\n    font-family: 'MongoDB Value Serif';\n    font-weight: 700;\n    src: url('${fontsURL}value-serif/MongoDBValueSerif-Bold.woff')\n        format('woff'),\n      url('${fontsURL}value-serif/MongoDBValueSerif-Bold.woff2') format('woff2'),\n      url('${fontsURL}value-serif/MongoDBValueSerif-Bold.ttf')\n        format('truetype');\n  }\n\n  /* Medium */\n  @font-face {\n    font-family: 'MongoDB Value Serif';\n    font-weight: 500;\n    src: url('${fontsURL}value-serif/MongoDBValueSerif-Medium.woff')\n        format('woff'),\n      url('${fontsURL}value-serif/MongoDBValueSerif-Medium.woff2')\n        format('woff2'),\n      url('${fontsURL}value-serif/MongoDBValueSerif-Medium.ttf')\n        format('truetype');\n  }\n\n  /* Normal */\n  @font-face {\n    font-family: 'MongoDB Value Serif';\n    font-weight: 400;\n    src: url('${fontsURL}value-serif/MongoDBValueSerif-Regular.woff')\n        format('woff'),\n      url('${fontsURL}value-serif/MongoDBValueSerif-Regular.woff2')\n        format('woff2'),\n      url('${fontsURL}value-serif/MongoDBValueSerif-Regular.ttf')\n        format('truetype');\n  }\n\n  @font-face {\n    font-family: 'Akzidenz';\n    font-weight: normal;\n    src: url('${fontsURL}/akzidgrostdreg.eot');\n    /* IE9 Compat Modes */\n    src: url('${fontsURL}/akzidgrostdreg.eot?#iefix')\n        format('embedded-opentype'),\n      /* Pretty Modern Browsers */ url('${fontsURL}/akzidgrostdreg.ttf')\n        format('truetype'),\n      /* Safari, Android, iOS */ url('${fontsURL}/akzidgrostdreg.svg#Akzidenz')\n        format('svg');\n    /* Legacy iOS */\n  }\n\n  @font-face {\n    font-family: 'Akzidenz';\n    font-weight: 600;\n    src: url('${fontsURL}/akzidgrostdmed.eot');\n    /* IE9 Compat Modes */\n    src: url('${fontsURL}/akzidgrostdmed.eot?#iefix')\n        format('embedded-opentype'),\n      /* IE6-IE8 */ url('${fontsURL}/akzidgrostdmed.woff') format('woff'),\n      /* Pretty Modern Browsers */ url('${fontsURL}/akzidgrostdmed.ttf')\n        format('truetype'),\n      /* Safari, Android, iOS */ url('${fontsURL}/akzidgrostdmed.svg#Akzidenz')\n        format('svg');\n    /* Legacy iOS */\n  }\n\n  @font-face {\n    font-family: 'Akzidenz';\n    font-weight: bold;\n    src: url('${fontsURL}/akzidgrostdmed.eot');\n    /* IE9 Compat Modes */\n    src: url('${fontsURL}/akzidgrostdmed.eot?#iefix')\n        format('embedded-opentype'),\n      /* IE6-IE8 */ url('${fontsURL}/akzidgrostdmed.woff') format('woff'),\n      /* Pretty Modern Browsers */ url('${fontsURL}/akzidgrostdmed.ttf')\n        format('truetype'),\n      /* Safari, Android, iOS */ url('${fontsURL}/akzidgrostdmed.svg#Akzidenz')\n        format('svg');\n    /* Legacy iOS */\n  }\n\n  html {\n    font-family: 'Euclid Circular A', 'Akzidenz', 'Helvetica Neue', Helvetica,\n      Arial, sans-serif;\n    font-weight: normal;\n    font-style: normal;\n  }\n\n  body {\n    margin: 0;\n  }\n\n  *,\n  *:before,\n  *:after {\n    box-sizing: border-box;\n  }\n`;\n\nReactDOM.render(\n  <React.StrictMode>\n    <div className={globalStyles}>\n      <App />\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}